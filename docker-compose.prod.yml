services:
  # Base de données MySQL
  mysql:
    image: mysql:5.7
    container_name: policify_mysql_prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_HOST: '%'
    ports:
      - "${DB_PORT_EXTERNAL:-3307}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - policify_network
    # Sécurité : Pas de ports exposés en production
    # ports: []
    command: >
      --sql-mode=STRICT_TRANS_TABLES,NO_ZERO_AUTO_VALUE_ON_ERROR,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
      --innodb-buffer-pool-size=256M

  # Application Laravel
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: policify_app_prod
    restart: unless-stopped
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
    depends_on:
      - mysql
    networks:
      - policify_network
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - GROQ_API_KEY=${GROQ_API_KEY}

  # Serveur web Nginx
  nginx:
    image: nginx:alpine
    container_name: policify_nginx_prod
    restart: unless-stopped
    ports:
      - "${APP_PORT_EXTERNAL:-80}:80"
      - "${APP_SSL_PORT_EXTERNAL:-443}:443"
    volumes:
      - .:/var/www/html:ro
      - ./nginx/production.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - policify_network

volumes:
  mysql_data:
    driver: local

networks:
  policify_network:
    driver: bridge