# Configuration Nginx sécurisée pour production
server {
    listen 80;
    listen [::]:80;
    server_name localhost;
    
    # Redirection HTTPS (à activer avec un certificat SSL)
    # return 301 https://$server_name$request_uri;
    
    root /var/www/html/public;
    index index.php index.html;

    # Logs sécurisés
    access_log /var/log/nginx/policify_access.log;
    error_log /var/log/nginx/policify_error.log warn;

    # Protection contre les gros téléchargements
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # Headers de sécurité
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.tailwindcss.com https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com; img-src 'self' data: https:; font-src 'self' https://cdnjs.cloudflare.com; connect-src 'self';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), accelerometer=(), gyroscope=()" always;

    # Masquer la version Nginx
    server_tokens off;

    # Gestion Laravel
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP handling sécurisé
    location ~ \.php$ {
        # Empêcher l'exécution de PHP dans uploads
        if ($request_uri ~ ^/(?:storage|public/storage)/) {
            return 403;
        }

        fastcgi_pass app:9000;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Sécurité PHP
        fastcgi_param PHP_VALUE "expose_php=0";
        fastcgi_read_timeout 300;
    }

    # Bloquer l'accès aux fichiers sensibles
    location ~ /\.(env|git|svn) {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Bloquer l'accès aux fichiers de config
    location ~ /(composer\.(json|lock)|package\.(json|lock)|yarn\.lock|phpunit\.xml|\.editorconfig|\.gitignore)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Assets statiques avec cache
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        access_log off;
    }

    # Bloquer les bots malveillants
    location ~ /(wp-admin|wp-login|phpmyadmin|adminer|admin\.php) {
        return 444;
    }

    # Limiter les requêtes
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    location /login {
        limit_req zone=login burst=3 nodelay;
        try_files $uri $uri/ /index.php?$query_string;
    }
}

# Configuration HTTPS (optionnelle)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name localhost;
#
#     ssl_certificate /etc/nginx/ssl/cert.pem;
#     ssl_certificate_key /etc/nginx/ssl/key.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#
#     # ... rest of config same as HTTP
# }